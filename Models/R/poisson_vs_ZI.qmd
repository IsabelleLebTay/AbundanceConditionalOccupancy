---
title: "Poisson or Zero-Inflated?"
format:
    html:
        code-fold: true

---


To insert new code cell: Ctrl+Shift+I
Execute the current cell with Ctrl+Shift+Enter, the current line(s) with Ctrl+Enter, or previous cells with Ctrl+Alt+P (note that on the Mac you should use Cmd rather than Ctrl as the prefix for all Quarto keyboard shortcuts).

Load packages and set paths.
```{r}
#| output: false
library(glmmTMB)
library(DHARMa)
library(ggplot2)
library(bbmle) 
library(nlme)
library(ncf)
library(dplyr)

covariates_path <- "C:/Users/ilebe/Documents/!Masters!/Analysis/0. Data/Processed/covariates"
obs_path <- "C:/Users/ilebe/Documents/!Masters!/Analysis/0. Data/Processed/All Processed Final Location"

```

Load data
```{r}
#| output: false
full_covariates <- read.csv(file.path(covariates_path, 'merged_covariates.csv'))
max_count <- read.csv(file.path(obs_path, 'max_count_all_spp.csv'))

```

Prepare data for modeling
```{r}
#| output: false
full_covariates$Veg_cat <- factor(full_covariates$Veg_cat)
# Add 'nb' to neighbourhood effect 
bird_columns <- c('TEWA', 'RCKI', 'WTSP', 'YRWA', 'REVI', 'OSFL')
new_names <- paste0("nb_", bird_columns)
colnames(full_covariates)[colnames(full_covariates) %in% bird_columns] <- new_names

obs_covs_df <- cbind(max_count, full_covariates)
head(obs_covs_df)
# write.csv(obs_covs_df, file = file.path(obs_path, "max_count_all_covs.csv"))
# Define the predictors to scale
predictors_to_scale <- c('RETN_m2', 'Year_since_logging')

# Apply MinMax scaling to each predictor
obs_covs_df[, predictors_to_scale] <- lapply(obs_covs_df[, predictors_to_scale], function(x) {
  (x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))
})

# summary(obs_covs_df)
obs_covs_df <- obs_covs_df[, !duplicated(colnames(obs_covs_df))]

```


# Modelling
For each bird, compare the Poisson, ZIP, and ZINB models

## TEWA
```{r}

PoissonPercentTEWA <- glmmTMB(TEWA ~ percent_decid + percent_pine + 
                            percent_spruce +
                             RETN_m2 + Year_since_logging,
                    data = obs_covs_df,
                    family=poisson)

PoissonCat<- glmmTMB(TEWA ~ Veg_cat +
                            RETN_m2 + Year_since_logging,
                    data = obs_covs_df,
                    family=poisson)

rePoissonPercentTEWA <- glmmTMB(TEWA ~ percent_decid + percent_pine + 
                            percent_spruce +
                             RETN_m2 + Year_since_logging + (1|location),
                    data = obs_covs_df,
                    family=poisson)                    
summary(PoissonPercentTEWA)
```
```{r}
plot(simulateResiduals(PoissonPercentTEWA))
```

## Check for spatial correlation

```{r}
par(mfrow=c(1,2))
E <- residuals(PoissonPercentTEWA)
RE <- residuals(rePoissonPercentTEWA)
corr <- spline.correlog(obs_covs_df$longitude, obs_covs_df$latitude, E, resamp = 99, type = "boot")
corrRE <- spline.correlog(obs_covs_df$longitude, obs_covs_df$latitude, RE, resamp = 99, type = "boot")
plot(corr, main='TEWA spatial correlation, no RE')
plot(corrRE, main='TEWA spatial correlation, with RE')
```

# OSFL

```{r}
PoissonOSFL <- glmmTMB(OSFL ~ percent_decid + percent_pine + 
                            percent_spruce +
                            RETN_m2 + Year_since_logging,
                    data = obs_covs_df,
                    family=poisson)

rePoissonOSFL <- glmmTMB(OSFL ~ percent_mixed + percent_pine + 
                            percent_spruce +
                            RETN_m2 + Year_since_logging  + (1|location),
                    data = obs_covs_df,
                    family=poisson)

summary(rePoissonOSFL)
plot(simulateResiduals(rePoissonOSFL))  
```

## Check for spatial correlation

```{r}
par(mfrow=c(1,2))
E <- residuals(PoissonOSFL)
RE <- residuals(rePoissonOSFL)
corr <- spline.correlog(obs_covs_df$longitude, obs_covs_df$latitude, E, resamp = 99, type = "boot")
corr <- spline.correlog(obs_covs_df$longitude, obs_covs_df$latitude, RE, resamp = 99, type = "boot")
plot(corr, main='OSFL spatial correlation, no RE')
plot(corrRE, main='OSFL spatial correlation, with RE')
```

# YRWA


```{r}
PoissonYRWA <- glmmTMB(YRWA ~ percent_decid + percent_pine + 
                            percent_spruce +
                            RETN_m2 + Year_since_logging,
                    data = obs_covs_df,
                    family=nbinom1)

rePoissonYRWA <- glmmTMB(YRWA ~ percent_decid + percent_pine + 
                            percent_spruce +
                            RETN_m2 + Year_since_logging + (1|location),
                    data = obs_covs_df,
                    family=poisson)

summary(rePoissonYRWA)
plot(simulateResiduals(rePoissonYRWA))  

# testDispersion(simulateResiduals(PoissonYRWA))
# testZeroInflation(simulateResiduals(PoissonYRWA))
```

## Check for spatial correlation

```{r}
par(mfrow=c(1,2))
E <- residuals(PoissonYRWA)
RE <- residuals(rePoissonYRWA)
corr <- spline.correlog(obs_covs_df$longitude, obs_covs_df$latitude, E, resamp = 99, type = "boot")
corr <- spline.correlog(obs_covs_df$longitude, obs_covs_df$latitude, RE, resamp = 99, type = "boot")
plot(corr, main='YRWA spatial correlation, no RE')
plot(corrRE, main='YRWA spatial correlation, with RE')
```


# REVI

```{r}
PoissonREVI <- glmmTMB(REVI ~  percent_pine + 
                            percent_spruce + percent_mixed +
                            RETN_m2 + Year_since_logging,
                    data = obs_covs_df,
                    family=poisson)

rePoissonREVI <- glmmTMB(REVI ~  percent_pine + 
                            percent_spruce + percent_mixed +
                            RETN_m2 + Year_since_logging + (1|location),
                    data = obs_covs_df,
                    family=poisson)                    
summary(rePoissonREVI)
plot(simulateResiduals(rePoissonREVI))
```

## Check for spatial correlation

```{r}
par(mfrow=c(1,2))
E <- residuals(PoissonREVI)
RE <- residuals(rePoissonREVI)
corr <- spline.correlog(obs_covs_df$longitude, obs_covs_df$latitude, E, resamp = 99, type = "boot")
corr <- spline.correlog(obs_covs_df$longitude, obs_covs_df$latitude, RE, resamp = 99, type = "boot")
plot(corr, main='REVI spatial correlation, no RE')
plot(corrRE, main='REVI spatial correlation, with RE')
```



```{r}
# Poisson3REVI <- glmmTMB(REVI ~  percent_pine + 
#                             percent_spruce +
#                             RETN_m2 + Year_since_logging + (1|location),
#                     data = obs_covs_df,
#                     family=nbinom1
#                     )

# summary(Poisson3REVI)
# plot(simulateResiduals(Poisson3REVI))

# hist(obs_covs_df$REVI)

# mean(obs_covs_df$REVI)
# testDispersion(simulateResiduals(Poisson3REVI))
# testZeroInflation(simulateResiduals(Poisson3REVI))
```


# WTSP


```{r}
PoissonWTSP <- glmmTMB(WTSP ~ percent_decid + percent_pine + 
                            percent_spruce +
                            RETN_m2 + Year_since_logging,
                    data = obs_covs_df,
                    family=poisson)

rePoissonWTSP <- glmmTMB(WTSP ~ percent_decid + percent_pine + 
                            percent_spruce +
                            RETN_m2 + Year_since_logging + (1|location),
                    data = obs_covs_df,
                    family=poisson)
summary(rePoissonWTSP)
plot(simulateResiduals(rePoissonWTSP))
```

## Check for spatial correlation

```{r}
par(mfrow=c(1,2))
E <- residuals(PoissonWTSP)
RE <- residuals(rePoissonWTSP)
corr <- spline.correlog(obs_covs_df$longitude, obs_covs_df$latitude, E, resamp = 99, type = "boot")
corr <- spline.correlog(obs_covs_df$longitude, obs_covs_df$latitude, RE, resamp = 99, type = "boot")
plot(corr, main='WTSP spatial correlation, no RE')
plot(corrRE, main='WTSP spatial correlation, with RE')
```



```{r}
# negbinom <- glmmTMB(WTSP ~ percent_decid + percent_pine + 
#                             percent_spruce +
#                             RETN_m2 + Year_since_logging + (1|location),
#                     data = obs_covs_df,
#                     family=nbinom1
#                     )
# # summary(negbinom)
# plot(simulateResiduals(negbinom))

# testDispersion(simulateResiduals(negbinom))
# testZeroInflation(simulateResiduals(negbinom))

```

# RCKI


```{r}
PoissonRCKI <- glmmTMB(RCKI ~ percent_decid + percent_pine + 
                            percent_spruce +
                            RETN_m2 + Year_since_logging,
                    data = obs_covs_df,
                    family=poisson)

rePoissonRCKI <- glmmTMB(RCKI ~ percent_decid + percent_pine + 
                            percent_spruce +
                            RETN_m2 + Year_since_logging + (1|location),
                    data = obs_covs_df,
                    family=poisson)

summary(rePoissonRCKI)
plot(simulateResiduals(rePoissonRCKI))

```


## Check for spatial correlation

```{r}
par(mfrow=c(1,2))
E <- residuals(PoissonRCKI)
RE <- residuals(rePoissonRCKI)
corr <- spline.correlog(obs_covs_df$longitude, obs_covs_df$latitude, E, resamp = 99, type = "boot")
corrRE <- spline.correlog(obs_covs_df$longitude, obs_covs_df$latitude, RE, resamp = 99, type = "boot")
plot(corr, main='RCKI spatial correlation, no RE')
plot(corrRE, main='RCKI spatial correlation, with RE')

# Reset the plotting layout to default
par(mfrow=c(1,1))
```

